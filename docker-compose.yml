services:
  nginx:
    build:
      context: ./production/nginx
      dockerfile: Dockerfile
    container_name: Kshup_nginx
    hostname: nginx
    networks:
      - kshupnet
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    command: /bin/bash -c "envsubst < /etc/nginx/templates/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    depends_on:
      - app
      - www
    volumes:
      - ./production/nginx/certs:/etc/nginx/certs
      - ./production/nginx/www:/var/www/certbot
  
  certbot:
    image: certbot/certbot
    container_name: Kshup_certbot
    hostname: certbot
    depends_on:
      - nginx
    networks:
      - kshupnet
    volumes:
      - ./production/nginx/certs:/etc/letsencrypt/live/kshup.com
      - ./production/nginx/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; certbot certonly --webroot -w /var/www/certbot -d kshup.com --non-interactive --agree-tos --email tnhnipek@gmail.com; sleep 12h; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done'"

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: Kshup_app
    hostname: app
    environment:
      - NODE_ENV=production
    volumes:
      - ./app:/usr/app/
      - /usr/app/node_modules
    networks:
      - kshupnet
    env_file:
      - .env

  www:
    build:
      context: ./www
      dockerfile: Dockerfile
    container_name: Kshup_www
    hostname: www
    environment:
      - NODE_ENV=production
    volumes:
      - ./www:/usr/www/
      - /usr/www/node_modules
    networks:
      - kshupnet
    env_file:
      - .env

networks:
  kshupnet:
    driver: bridge
